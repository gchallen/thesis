#!/usr/bin/perl

# Read in a EPS file generated by GNUPLOT and replace the line colors
# with something nicer to look at. Also does an 'epstopdf' on the result.

# fix-colors.pl <epsfile>

if ($#ARGV == -1) {
  print STDERR "Usage: fix-colors.pl <epsfile>\n";
  exit(-1);
}

$FNAME = $ARGV[0];
open (INFILE, "$FNAME") || die "Can't open $FNAME\n";
open (OUTFILE, ">$FNAME.tmp") || die "Can't open $FNAME.tmp for writing\n";

$col0 = "0.8 0 0";
$col1 = "0 0 0.8";
#$col2 = "0 0.8 0";
$col2 = "0 0.6 0.4";

$col4 = "1 0.65 0";
$col5 = "0 0.7 0";

while (<INFILE>) {
  chop;
  if ($_ eq "/LT0 { PL [] 1 0 0 DL } def") {
    print OUTFILE "/LT0 { PL [] $col0 DL } def\n";
  } elsif ($_ eq "/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def") {
    print OUTFILE "/LT1 { PL [4 dl 2 dl] $col1 DL } def\n";
  } elsif ($_ eq "/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def") {
    print OUTFILE "/LT2 { PL [2 dl 3 dl] $col2 DL } def\n";
  } elsif ($_ eq "/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def") {
    print OUTFILE "/LT4 { PL [5 dl 2 dl 1 dl 2 dl] $col4 DL } def\n";
  } elsif ($_ eq "/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def") {
    print OUTFILE "/LT5 { PL [4 dl 3 dl 1 dl 3 dl] $col5 DL } def\n";
  } else {
    print OUTFILE "$_\n";
  }
}

close INFILE;
close OUTFILE;

`mv $FNAME.tmp $FNAME`;
`epstopdf $FNAME`;
