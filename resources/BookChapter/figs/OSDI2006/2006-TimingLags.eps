%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 61 57 740 541
%%HiResBoundingBox: 61.000000 57.500000 739.500000 541.000000
%%LanguageLevel: 2
%%EndComments
% EPSF created by ps2eps 1.64
%%BeginProlog
save
countdictstack
mark
newpath
/showpage {} def
/setpagedevice {pop} def
%%EndProlog
%%Page 1 1
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2004 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  3 1 roll 2 array astore
  /setpagedevice where {
    pop 3 dict begin
      /PageSize exch def
      /ImagingBBox null def
      /Policies 1 dict dup begin /PageSize 3 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/cshow where {
  pop
  /cshow2 {
    dup {
      pop pop
      1 string dup 0 3 index put 3 index exec
    } exch cshow
    pop pop
  } def
}{
  /cshow2 {
    currentfont /FontType get 0 eq {
      0 2 2 index length 1 sub {
        2 copy get exch 1 add 2 index exch get
        2 copy exch 256 mul add
        2 string dup 0 6 5 roll put dup 1 5 4 roll put
        3 index exec
      } for
    } {
      dup {
        1 string dup 0 3 index put 3 index exec
      } forall
    } ifelse
    pop pop
  } def
} ifelse
/awcp {
  exch {
    false charpath
    5 index 5 index rmoveto
    6 index eq { 7 index 7 index rmoveto } if
  } exch cshow2
  6 {pop} repeat
} def
/Tj {
  fCol
  1 index stringwidth pdfTextMat idtransform pop
  sub 1 index length dup 0 ne { div } { pop pop 0 } ifelse
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16 {
  fCol
  2 index stringwidth pdfTextMat idtransform pop
  sub exch div
  pdfWordSpacing pdfHorizScaling mul 0 pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing pdfHorizScaling mul add 0
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj16V {
  fCol
  2 index stringwidth pdfTextMat idtransform exch pop
  sub exch div
  0 pdfWordSpacing pdfTextMat dtransform 32
  4 3 roll pdfCharSpacing add 0 exch
  pdfTextMat dtransform
  6 5 roll Tj1
} def
/Tj1 {
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 8 2 roll
  pdfTextRender 1 and 0 eq {
    6 copy awidthshow
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    7 index 7 index moveto
    6 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    false awcp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    8 6 roll moveto
    false awcp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    8 {pop} repeat
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { pdfFontSize 0.001 mul mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { pdfFontSize 0.001 mul mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2 image operators
/pdfImBuf 100 string def
/pdfIm {
  image
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfImM {
  fCol imagemask
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
/F9_0 /Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quoteright
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /quoteleft/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/exclamdown/cent/sterling/fraction/yen/florin/section
  /currency/quotesingle/quotedblleft/guillemotleft/guilsinglleft/guilsinglright/fi/fl
  /.notdef/endash/dagger/daggerdbl/periodcentered/.notdef/paragraph/bullet
  /quotesinglbase/quotedblbase/quotedblright/guillemotright/ellipsis/perthousand/.notdef/questiondown
  /.notdef/grave/acute/circumflex/tilde/macron/breve/dotaccent
  /dieresis/.notdef/ring/cedilla/.notdef/hungarumlaut/ogonek/caron
  /emdash/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/AE/.notdef/ordfeminine/.notdef/.notdef/.notdef/.notdef
  /Lslash/Oslash/OE/ordmasculine/.notdef/.notdef/.notdef/.notdef
  /.notdef/ae/.notdef/.notdef/.notdef/dotlessi/.notdef/.notdef
  /lslash/oslash/oe/germandbls/.notdef/.notdef/.notdef/.notdef]
pdfMakeFont
%%EndSetup
pdfStartPage
270 rotate
-612 0 translate
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
q
q
[0.1 0 0 0.1 0 0] cm
q
{} settransfer
10 w
1 i
864 3038 m
864 3101 l
864 7394 m
864 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 92.4 147.884] Tm
0 0 Td
/F9_0 1 Tf
(08/13/05 03:38:08) 8.062 Tj
Q
1011 3038 m
1011 3101 l
1011 7394 m
1011 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 107.1 167.9] Tm
0 0 Td
/F9_0 1 Tf
(           06:16:46) 6.95 Tj
Q
1159 3038 m
1159 3101 l
1159 7394 m
1159 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 121.9 217.94] Tm
0 0 Td
/F9_0 1 Tf
( 08:17:51) 4.17 Tj
Q
1307 3038 m
1307 3101 l
1307 7394 m
1307 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 136.7 167.9] Tm
0 0 Td
/F9_0 1 Tf
(           15:24:58) 6.95 Tj
Q
1455 3038 m
1455 3101 l
1455 7394 m
1455 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 151.5 147.884] Tm
0 0 Td
/F9_0 1 Tf
(08/15/05 04:48:27) 8.062 Tj
Q
1602 3038 m
1602 3101 l
1602 7394 m
1602 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 166.2 167.9] Tm
0 0 Td
/F9_0 1 Tf
(           07:07:52) 6.95 Tj
Q
1750 3038 m
1750 3101 l
1750 7394 m
1750 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 181 167.9] Tm
0 0 Td
/F9_0 1 Tf
(           09:11:28) 6.95 Tj
Q
1898 3038 m
1898 3101 l
1898 7394 m
1898 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 195.8 217.94] Tm
0 0 Td
/F9_0 1 Tf
( 16:04:37) 4.17 Tj
Q
2046 3038 m
2046 3101 l
2046 7394 m
2046 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 210.6 167.9] Tm
0 0 Td
/F9_0 1 Tf
(           19:29:08) 6.95 Tj
Q
2193 3038 m
2193 3101 l
2193 7394 m
2193 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 225.3 147.884] Tm
0 0 Td
/F9_0 1 Tf
(08/16/05 04:04:56) 8.062 Tj
Q
2341 3038 m
2341 3101 l
2341 7394 m
2341 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 240.1 167.9] Tm
0 0 Td
/F9_0 1 Tf
(           09:45:14) 6.95 Tj
Q
2489 3038 m
2489 3101 l
2489 7394 m
2489 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 254.9 147.884] Tm
0 0 Td
/F9_0 1 Tf
(08/17/05 00:22:39) 8.062 Tj
Q
2636 3038 m
2636 3101 l
2636 7394 m
2636 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 269.6 167.9] Tm
0 0 Td
/F9_0 1 Tf
(           02:09:47) 6.95 Tj
Q
2784 3038 m
2784 3101 l
2784 7394 m
2784 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 284.4 167.9] Tm
0 0 Td
/F9_0 1 Tf
(           05:07:31) 6.95 Tj
Q
2932 3038 m
2932 3101 l
2932 7394 m
2932 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 299.2 217.94] Tm
0 0 Td
/F9_0 1 Tf
( 14:00:43) 4.17 Tj
Q
3080 3038 m
3080 3101 l
3080 7394 m
3080 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 314 167.9] Tm
0 0 Td
/F9_0 1 Tf
(           16:48:26) 6.95 Tj
Q
3227 3038 m
3227 3101 l
3227 7394 m
3227 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 328.7 147.884] Tm
0 0 Td
/F9_0 1 Tf
(08/18/05 00:52:31) 8.062 Tj
Q
3375 3038 m
3375 3101 l
3375 7394 m
3375 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 343.5 167.9] Tm
0 0 Td
/F9_0 1 Tf
(           03:43:05) 6.95 Tj
Q
3523 3038 m
3523 3101 l
3523 7394 m
3523 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 358.3 167.9] Tm
0 0 Td
/F9_0 1 Tf
(           04:54:30) 6.95 Tj
Q
3670 3038 m
3670 3101 l
3670 7394 m
3670 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 373 167.9] Tm
0 0 Td
/F9_0 1 Tf
(           06:26:50) 6.95 Tj
Q
3818 3038 m
3818 3101 l
3818 7394 m
3818 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 387.8 167.9] Tm
0 0 Td
/F9_0 1 Tf
(           13:28:54) 6.95 Tj
Q
3966 3038 m
3966 3101 l
3966 7394 m
3966 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 402.6 217.94] Tm
0 0 Td
/F9_0 1 Tf
( 14:23:06) 4.17 Tj
Q
4114 3038 m
4114 3101 l
4114 7394 m
4114 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 417.4 167.9] Tm
0 0 Td
/F9_0 1 Tf
(           15:31:06) 6.95 Tj
Q
4261 3038 m
4261 3101 l
4261 7394 m
4261 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 432.1 167.9] Tm
0 0 Td
/F9_0 1 Tf
(           17:59:49) 6.95 Tj
Q
4409 3038 m
4409 3101 l
4409 7394 m
4409 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 446.9 167.9] Tm
0 0 Td
/F9_0 1 Tf
(           21:33:01) 6.95 Tj
Q
4557 3038 m
4557 3101 l
4557 7394 m
4557 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 461.7 147.884] Tm
0 0 Td
/F9_0 1 Tf
(08/19/05 00:16:22) 8.062 Tj
Q
4705 3038 m
4705 3101 l
4705 7394 m
4705 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 476.5 217.94] Tm
0 0 Td
/F9_0 1 Tf
( 01:52:09) 4.17 Tj
Q
4852 3038 m
4852 3101 l
4852 7394 m
4852 7331 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 491.2 167.9] Tm
0 0 Td
/F9_0 1 Tf
(           02:33:30) 6.95 Tj
Q
[10 20] 0 d
2.5 w
5000 6581 m
716 6581 l
S
[] 0 d
10 w
5000 6581 m
4937 6581 l
716 6581 m
779 6581 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 524 648.092] Tm
0 0 Td
/F9_0 1 Tf
(47) 1.112 Tj
Q
[10 20] 0 d
2.5 w
5000 3851 m
716 3851 l
S
[] 0 d
10 w
5000 3851 m
4937 3851 l
716 3851 m
779 3851 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 524 369.593] Tm
0 0 Td
/F9_0 1 Tf
(-47 ) 1.723 Tj
Q
[10 20] 0 d
2.5 w
5000 5216 m
716 5216 l
S
[] 0 d
10 w
5000 5216 m
4937 5216 l
716 5216 m
779 5216 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[0 18 -18 0 524 516.596] Tm
0 0 Td
/F9_0 1 Tf
(0) 0.556 Tj
Q
716 3038 4284 4356 re
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[-1 0 0 -1 359.807 74] Tm
0 0 Td
/F9_0 18 Tf
(Event Time \(GMT\)) 148.014 Tj
[0 18 -18 0 551 463.595] Tm
0 0 Td
/F9_0 1 Tf
(Time Lag \(ms\)) 6.445 Tj
Q
/DeviceRGB {} cs
[1 0 0] sc
864 6121 m
829.206 6121 801 6092.79 801 6058 c
801 6023.21 829.206 5995 864 5995 c
898.794 5995 927 6023.21 927 6058 c
927 6092.79 898.794 6121 864 6121 c
f
1011 3972 m
976.206 3972 948 3943.79 948 3909 c
948 3874.21 976.206 3846 1011 3846 c
1045.79 3846 1074 3874.21 1074 3909 c
1074 3943.79 1045.79 3972 1011 3972 c
f
1159 6121 m
1124.21 6121 1096 6092.79 1096 6058 c
1096 6023.21 1124.21 5995 1159 5995 c
1193.79 5995 1222 6023.21 1222 6058 c
1222 6092.79 1193.79 6121 1159 6121 c
f
1307 4234 m
1272.21 4234 1244 4205.79 1244 4171 c
1244 4136.21 1272.21 4108 1307 4108 c
1341.79 4108 1370 4136.21 1370 4171 c
1370 4205.79 1341.79 4234 1307 4234 c
f
1455 4030 m
1420.21 4030 1392 4001.79 1392 3967 c
1392 3932.21 1420.21 3904 1455 3904 c
1489.79 3904 1518 3932.21 1518 3967 c
1518 4001.79 1489.79 4030 1455 4030 c
f
1602 6615 m
1567.21 6615 1539 6586.79 1539 6552 c
1539 6517.21 1567.21 6489 1602 6489 c
1636.79 6489 1665 6517.21 1665 6552 c
1665 6586.79 1636.79 6615 1602 6615 c
f
1750 4437 m
1715.21 4437 1687 4408.79 1687 4374 c
1687 4339.21 1715.21 4311 1750 4311 c
1784.79 4311 1813 4339.21 1813 4374 c
1813 4408.79 1784.79 4437 1750 4437 c
f
1898 6673 m
1863.21 6673 1835 6644.79 1835 6610 c
1835 6575.21 1863.21 6547 1898 6547 c
1932.79 6547 1961 6575.21 1961 6610 c
1961 6644.79 1932.79 6673 1898 6673 c
f
2046 6673 m
2011.21 6673 1983 6644.79 1983 6610 c
1983 6575.21 2011.21 6547 2046 6547 c
2080.79 6547 2109 6575.21 2109 6610 c
2109 6644.79 2080.79 6673 2046 6673 c
f
2193 4669 m
2158.21 4669 2130 4640.79 2130 4606 c
2130 4571.21 2158.21 4543 2193 4543 c
2227.79 4543 2256 4571.21 2256 4606 c
2256 4640.79 2227.79 4669 2193 4669 c
f
2341 5715 m
2306.21 5715 2278 5686.79 2278 5652 c
2278 5617.21 2306.21 5589 2341 5589 c
2375.79 5589 2404 5617.21 2404 5652 c
2404 5686.79 2375.79 5715 2341 5715 c
f
2489 3682 m
2454.21 3682 2426 3653.79 2426 3619 c
2426 3584.21 2454.21 3556 2489 3556 c
2523.79 3556 2552 3584.21 2552 3619 c
2552 3653.79 2523.79 3682 2489 3682 c
f
2636 4495 m
2601.21 4495 2573 4466.79 2573 4432 c
2573 4397.21 2601.21 4369 2636 4369 c
2670.79 4369 2699 4397.21 2699 4432 c
2699 4466.79 2670.79 4495 2636 4495 c
f
2784 4524 m
2749.21 4524 2721 4495.79 2721 4461 c
2721 4426.21 2749.21 4398 2784 4398 c
2818.79 4398 2847 4426.21 2847 4461 c
2847 4495.79 2818.79 4524 2784 4524 c
f
2932 4524 m
2897.21 4524 2869 4495.79 2869 4461 c
2869 4426.21 2897.21 4398 2932 4398 c
2966.79 4398 2995 4426.21 2995 4461 c
2995 4495.79 2966.79 4524 2932 4524 c
f
3080 3217 m
3045.21 3217 3017 3188.79 3017 3154 c
3017 3119.21 3045.21 3091 3080 3091 c
3114.79 3091 3143 3119.21 3143 3154 c
3143 3188.79 3114.79 3217 3080 3217 c
f
3227 5598 m
3192.21 5598 3164 5569.79 3164 5535 c
3164 5500.21 3192.21 5472 3227 5472 c
3261.79 5472 3290 5500.21 3290 5535 c
3290 5569.79 3261.79 5598 3227 5598 c
f
3375 6470 m
3340.21 6470 3312 6441.79 3312 6407 c
3312 6372.21 3340.21 6344 3375 6344 c
3409.79 6344 3438 6372.21 3438 6407 c
3438 6441.79 3409.79 6470 3375 6470 c
f
3523 5947 m
3488.21 5947 3460 5918.79 3460 5884 c
3460 5849.21 3488.21 5821 3523 5821 c
3557.79 5821 3586 5849.21 3586 5884 c
3586 5918.79 3557.79 5947 3523 5947 c
f
3670 5831 m
3635.21 5831 3607 5802.79 3607 5768 c
3607 5733.21 3635.21 5705 3670 5705 c
3704.79 5705 3733 5733.21 3733 5768 c
3733 5802.79 3704.79 5831 3670 5831 c
f
3818 5540 m
3783.21 5540 3755 5511.79 3755 5477 c
3755 5442.21 3783.21 5414 3818 5414 c
3852.79 5414 3881 5442.21 3881 5477 c
3881 5511.79 3852.79 5540 3818 5540 c
f
3966 6005 m
3931.21 6005 3903 5976.79 3903 5942 c
3903 5907.21 3931.21 5879 3966 5879 c
4000.79 5879 4029 5907.21 4029 5942 c
4029 5976.79 4000.79 6005 3966 6005 c
f
4114 4059 m
4079.21 4059 4051 4030.79 4051 3996 c
4051 3961.21 4079.21 3933 4114 3933 c
4148.79 3933 4177 3961.21 4177 3996 c
4177 4030.79 4148.79 4059 4114 4059 c
f
4261 6586 m
4226.21 6586 4198 6557.79 4198 6523 c
4198 6488.21 4226.21 6460 4261 6460 c
4295.79 6460 4324 6488.21 4324 6523 c
4324 6557.79 4295.79 6586 4261 6586 c
f
4409 5511 m
4374.21 5511 4346 5482.79 4346 5448 c
4346 5413.21 4374.21 5385 4409 5385 c
4443.79 5385 4472 5413.21 4472 5448 c
4472 5482.79 4443.79 5511 4409 5511 c
f
4557 5076 m
4522.21 5076 4494 5047.79 4494 5013 c
4494 4978.21 4522.21 4950 4557 4950 c
4591.79 4950 4620 4978.21 4620 5013 c
4620 5047.79 4591.79 5076 4557 5076 c
f
4705 4553 m
4670.21 4553 4642 4524.79 4642 4490 c
4642 4455.21 4670.21 4427 4705 4427 c
4739.79 4427 4768 4455.21 4768 4490 c
4768 4524.79 4739.79 4553 4705 4553 c
f
4852 3595 m
4817.21 3595 4789 3566.79 4789 3532 c
4789 3497.21 4817.21 3469 4852 3469 c
4886.79 3469 4915 3497.21 4915 3532 c
4915 3566.79 4886.79 3595 4852 3595 c
f
15 w
/DeviceRGB {} CS
[0 1 0] SC
5000 3851 m
716 3851 l
5000 6581 m
716 6581 l
S
10 w
/DeviceGray {} CS
[0] SC
716 3038 4284 4356 re
S
Q
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%Trailer
cleartomark
countdictstack
exch sub { end } repeat
restore
%%EOF
